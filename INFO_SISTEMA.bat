@echo off
chcp 65001 > nul
color 0A
cls

echo ===============================================================================
echo   ‚ÑπÔ∏è  INFORMA√á√ïES DO SISTEMA
echo   Sistema de IA Jur√≠dica v2.0
echo ===============================================================================
echo.

python --version > nul 2>&1
if %errorlevel% neq 0 (
    echo ‚ùå Python N√ÉO instalado
    echo.
    echo Por favor, instale Python 3.8+ de: https://www.python.org/downloads/
    pause
    exit /b 1
)

echo üìä VERS√ÉO DO PYTHON:
python --version
echo.

echo ===============================================================================
echo   üìÅ ESTRUTURA DO PROJETO
echo ===============================================================================
echo.

echo üìÇ M√≥dulos Python:
echo   ‚Ä¢ file_scanner.py      - Escaneia diret√≥rios
echo   ‚Ä¢ txt_reader.py        - L√™ arquivos TXT
echo   ‚Ä¢ pdf_reader.py        - L√™ arquivos PDF
echo   ‚Ä¢ json_generator.py    - Gera JSON otimizado
echo   ‚Ä¢ legal_ner.py         - Extra√ß√£o de entidades jur√≠dicas
echo   ‚Ä¢ legal_summarizer.py  - Sumariza√ß√£o de textos
echo   ‚Ä¢ nlp_processor.py     - Processador NLP principal
echo   ‚Ä¢ rag_indexer.py       - Indexa√ß√£o para RAG
echo.

echo üìÑ Arquivos de Configura√ß√£o:
echo   ‚Ä¢ config.py            - Configura√ß√µes do sistema
echo   ‚Ä¢ requirements.txt     - Depend√™ncias Python
echo   ‚Ä¢ main.py              - Programa principal
echo.

echo üìö Documenta√ß√£o:
echo   ‚Ä¢ START_HERE.txt       - In√≠cio r√°pido
echo   ‚Ä¢ GUIA_RAPIDO.md       - Tutorial passo a passo
echo   ‚Ä¢ README_V2.md         - Documenta√ß√£o completa
echo.

echo üöÄ Execut√°veis (.bat):
echo   ‚Ä¢ EXECUTAR_IA_JURIDICA.bat  - Execu√ß√£o completa
echo   ‚Ä¢ INSTALAR_COMPLETO.bat     - Instalador
echo   ‚Ä¢ MODO_RAPIDO.bat           - Modo r√°pido
echo   ‚Ä¢ TESTAR_NLP.bat            - Teste de m√≥dulos
echo   ‚Ä¢ VER_CONFIGURACAO.bat      - Ver config
echo   ‚Ä¢ INFO_SISTEMA.bat          - Este arquivo
echo.

echo ===============================================================================
echo   üìä ESTAT√çSTICAS DO C√ìDIGO
echo ===============================================================================
echo.

python -c "import os; py_files = [f for f in os.listdir('modules') if f.endswith('.py')]; print(f'Total de m√≥dulos Python: {len(py_files)}')"
python -c "import os; lines = 0; [lines := lines + len(open(f'modules/{f}', encoding='utf-8').readlines()) for f in os.listdir('modules') if f.endswith('.py')]; print(f'Total de linhas de c√≥digo: {lines}')"

echo.

echo ===============================================================================
echo   üîç VERIFICA√á√ÉO DE DEPEND√äNCIAS
echo ===============================================================================
echo.

python -c "import pypdf; print('‚úì pypdf instalado')" 2>nul || echo "‚ùå pypdf N√ÉO instalado"
python -c "import chardet; print('‚úì chardet instalado')" 2>nul || echo "‚ùå chardet N√ÉO instalado"
python -c "import spacy; print('‚úì spaCy instalado')" 2>nul || echo "‚ö† spaCy N√ÉO instalado (opcional para NLP)"
python -c "import transformers; print('‚úì transformers instalado')" 2>nul || echo "‚ö† transformers N√ÉO instalado (opcional para NLP)"
python -c "import torch; print('‚úì PyTorch instalado')" 2>nul || echo "‚ö† PyTorch N√ÉO instalado (opcional para NLP)"
python -c "from sentence_transformers import SentenceTransformer; print('‚úì sentence-transformers instalado')" 2>nul || echo "‚ö† sentence-transformers N√ÉO instalado (opcional para embeddings)"

echo.

echo ===============================================================================
echo   üíæ ESPA√áO EM DISCO
echo ===============================================================================
echo.

python -c "import os; size = sum(os.path.getsize(os.path.join('modules', f)) for f in os.listdir('modules') if f.endswith('.py')) / 1024; print(f'Tamanho dos m√≥dulos: {size:.1f} KB')"

echo.

echo ===============================================================================
echo   üéØ RECURSOS DISPON√çVEIS
echo ===============================================================================
echo.

python -c "try: from modules.nlp_processor import LegalNLPProcessor; print('‚úì Processador NLP dispon√≠vel')\nexcept: print('‚ö† Processador NLP n√£o dispon√≠vel')"

python -c "try: from modules.legal_ner import LegalEntityExtractor; print('‚úì Extra√ß√£o de entidades dispon√≠vel')\nexcept: print('‚ö† Extra√ß√£o de entidades n√£o dispon√≠vel')"

python -c "try: from modules.legal_summarizer import LegalSummarizer; print('‚úì Sumariza√ß√£o dispon√≠vel')\nexcept: print('‚ö† Sumariza√ß√£o n√£o dispon√≠vel')"

python -c "try: from modules.rag_indexer import RAGIndexer; print('‚úì Indexa√ß√£o RAG dispon√≠vel')\nexcept: print('‚ö† Indexa√ß√£o RAG n√£o dispon√≠vel')"

echo.

echo ===============================================================================
echo   ‚ÑπÔ∏è  INFORMA√á√ïES ADICIONAIS
echo ===============================================================================
echo.

python -c "from config import SYSTEM_INFO; print(f'Nome: {SYSTEM_INFO[\"name\"]}'); print(f'Vers√£o: {SYSTEM_INFO[\"version\"]}'); print(f'Descri√ß√£o: {SYSTEM_INFO[\"description\"]}')"

echo.

echo ===============================================================================
echo.

echo Para come√ßar a usar o sistema:
echo   1. Execute INSTALAR_COMPLETO.bat (se ainda n√£o instalou)
echo   2. Execute EXECUTAR_IA_JURIDICA.bat
echo.

echo Para mais informa√ß√µes:
echo   ‚Ä¢ Leia START_HERE.txt
echo   ‚Ä¢ Consulte GUIA_RAPIDO.md
echo.

echo ===============================================================================
echo.

pause
